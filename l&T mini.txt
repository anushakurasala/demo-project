#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int generateRandomNumber(int n)
{
    srand(time(NULL));
    return rand() % n;
}

int greater(char c1, char c2)
{
    if (c1 == c2)
    {
        return -1;
    }
    else if (c1 == 'r' && c2 == 's')
    {
        return 1;
    }
    else if (c2 == 'r' && c1 == 's')
    {
        return 0;
    }
    else if (c1 == 'p' && c2 == 'r')
    {
        return 1;
    }
    else if (c2 == 'p' && c1 == 'r')
    {
        return 0;
    }

    else if (c1 == 's' && c2 == 'p')
    {
        return 1;
    }
    else if (c2 == 's' && c1 == 'p')
    {
        return 0;
    }
}
void help()
{
    system("cls");
    printf("\n\n\n\tThis game is very easy to play.It consists of 3 levels.");
    printf("\n\n\tIf the user and computer selects rock and paper then who selects the paper will win");
    printf("\n\n\tIf the user and computer selects paper and scissor then who selects the scissor will win.");
}
void quit()
{
exit()
}

int main()
{
    int playerScore = 0, compScore = 0, temp;
    char playerChar, compChar;
    char dict[] = {'r', 'p', 's'};
    printf("\tWelcome to the Rock Paper Scissors\n");
    printf("\t----------------------------------\n\n");
    printf("\n\t\t Enter S to startgame");
    printf("\n\t\t Enter H for help ");
    printf("Enter Q to quit the game ");
    char choice=toupper(getch());
    if(choice=='H')
        {
          help();
            
        }
if(choice=='Q')
{
  quit();
}
    if(choice=='S')
    {
        system("cls");
    printf("/n/n/n/tStart the game");
    for (int i = 0; i < 3; i++)
    {
        // Take player input
        printf("Press 1 for Rock, Press 2 for Paper, Press 3 for Scissors\n\n");
        printf("\tPlayer's turn: ");
        scanf("%d", &temp);
        getchar();
        playerChar = dict[temp - 1];
        printf(" -----------------\n");
        printf("| You choose: %c   |\n", playerChar);
        printf(" -----------------\n\n");

        //computer generate
        printf("Press 1 for Rock, Press 2 for Paper, Press 3 for Scissors\n\n");
        printf("\tComputer's turn\n");
        temp = generateRandomNumber(3) + 1;
        compChar = dict[temp - 1];
        printf(" --------------------\n");
        printf("| Computer choose: %c |\n", compChar);
        printf(" --------------------\n\n");

        // compater character and increment the score
        if (greater(compChar, playerChar) == 1)
        {
            compScore++;
            printf("\t\tComputer Got It!\n\n");
        }
        else if (greater(compChar, playerChar) == -1)
        {
            compScore++;
            playerScore++;
            printf("\t\tIt's a draw. Both got 1 point!\n\n");
        }
        else
        {
            playerScore++;
            printf("\t\tYou Got It!\n\n");
        }

        printf(" -------------\n");
        printf("| You: %d      |\n", playerScore);
        printf("| Computer: %d |\n", compScore);
        printf(" -------------\n\n");

        printf("===========================================================\n\n");
    }
    }

    printf(" -----------------\n");
    printf("|   Final Score   |\n");
    printf(" -----------------\n");
    printf("|  You | Computer |\n");
    printf("|------|----------|\n");
    printf("|   %d  |    %d     |\n", playerScore, compScore);
    printf(" -----------------\n\n");

    // compare score
    if (playerScore > compScore)
    {
        printf("\n\t -------------------\n");
        printf("\t| You Win the match |\n");
        printf("\t -------------------\n");
    }
    else if (playerScore < compScore)
    {
        printf("\n\t ------------------------\n");
        printf("\t| Computer Win the match |\n");
        printf("\t ------------------------\n");
    }
    else
    {
        printf("\n\t -------------\n");
        printf("\t| It's a draw |\n");
        printf("\t -------------\n");
    }

    return 0;
}

https://www.youtube.com/watch?v=68FQvE2JFp8
d†
     b        .text           0     Ì           P`.data                               @ PÀ.bss                                € PÀ.rdata             L              @ P@.xdata             \              @ 0@.pdata             h  ê         @ 0@/4              I  t           @ B/16             ‰   ½              @ B/30             0   F  0         @ B/45             Ö   v  D         @ B/57                                 @ B/68             @   L              @ P@/79             @   Œ  N         @ @BUH‰åHƒì è    H
    è    ¸    HƒÄ ]ÃHello world!    2P      $       E       GNU C17 8.1.0 -mtune=core2 -march=nocona -g C:\Users\ANUSHA\Documents\ExamplesEmbeddedC\RPS\main.c C:\Users\ANUSHA\Documents\ExamplesEmbeddedC\RPS         $           char long long unsigned int long long int wchar_t b÷   short unsigned int int long int ´   ç   
  unsigned int long unsigned int unsigned char double float long double __imp___mb_cur_max s,     µ  ¼     _sys_errlist ¬&¥  _sys_nerr ­$
  __imp___argc ,  __imp___argv        __imp___wargv !+  1  &  __imp__environ '  __imp__wenviron ,+  __imp__pgmptr 2  __imp__wpgmptr 71  __imp__osplatform <²  2  __imp__osver A²  __imp__winver F²  __imp__winmajor K²  __imp__winminor P²  _amblksiz 52  	main 
          $       œ %  $ >   :;9I   I  4 :;9I?<  I  ! I/  4 :;9I?<  	. ?:;9I@–B   ,                     $                       Ò    ¯   û
      C:/Users/ANUSHA/Documents/ExamplesEmbeddedC/RPS C:/Program Files/CodeBlocks/MinGW/x86_64-w64-mingw32/include  main.c   stdlib.h   malloc.h   crtdefs.h     	        ‚Y»Y GCC: (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0     ÿÿÿÿ x        $               $       A†C
_Æ   	          
                                                °       6                    ¾                      .file       þÿ  gmain.c            main                             .text          $                .data                            .bss                             .rdata         
                 .xdata                          .pdata                             \          I                   h          ‰                     v       	   0                    …       
   Ö                    ‘          ?                     œ       
   @                __main           puts             ©   .debug_info .debug_abbrev .debug_aranges .debug_line .debug_str .rdata$zzz .debug_frame .debug_info .debug_abbrev .debug_aranges .debug_line .rdata$zzz .debug_frame 